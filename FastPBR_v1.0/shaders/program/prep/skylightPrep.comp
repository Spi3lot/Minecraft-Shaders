layout(local_size_x = 4, local_size_y = 4) in;
const ivec3 workGroups = ivec3(8, 4, 1);

layout(rgba16f) writeonly uniform image2D colorimg5;

uniform sampler2D colortex5;

#include "/lib/head.glsl"

const ivec2 TileSize = ivec2(gl_WorkGroupSize.xy);
const int TileSamples = TileSize.x * TileSize.y;

shared vec3 Skybox[TileSize.x][TileSize.y];

void main() {
    ivec2 Index = ivec2(gl_GlobalInvocationID.xy);

    Skybox[Index.x][Index.y] = texelFetch(colortex5, Index, 0).rgb;

    memoryBarrierShared();
    barrier();

    if (Index == ivec2(0)) {
        vec3 TileColor = vec3(0);

        for (int x = 0; x < TileSize.x; ++x) {
            for (int y = 0; y < TileSize.y; ++y) {
                TileColor += Skybox[x][y];
            }
        }
        TileColor /= TileSamples;

        imageStore(colorimg5, ivec2(gl_WorkGroupID.xy), vec4(TileColor, 1));
    }

}